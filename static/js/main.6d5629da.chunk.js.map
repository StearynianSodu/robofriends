{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","Fragment","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","resoponse","json","users","this","filteredRobots","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,GACtB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACI,6BAAKF,IACL,4BAAIC,WCaLK,EAlBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACf,OACI,cAAC,IAAMC,SAAP,UAEQD,EAAOE,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEAT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,SCKdC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCPI,EARA,SAACC,GACZ,OACI,sBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,UACKJ,EAAMK,SADX,QC+COC,G,wDAvCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAbzC,EAAKC,MAAQ,CACTxB,OAAQ,GACRqB,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OACfI,MAAM,8CACDC,MAAK,SAAAC,GAAS,OAAGA,EAAUC,UAC3BF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACpB,OAAO6B,S,oBAO5C,WACI,MAA8BC,KAAKN,MAA5BxB,EAAP,EAAOA,OAAQqB,EAAf,EAAeA,YACTU,EAAiB/B,EAAOgC,QAAO,SAAAhC,GACjC,OAAOA,EAAOP,KAAKwC,cAAcC,SAASb,EAAYY,kBAE1D,OAAQjC,EAAOmC,OAGX,sBAAKvC,UAAU,KAAf,UACI,sBAAKA,UAAU,UAAf,UACI,6CACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKZ,oBAElC,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQ+B,SAR1B,6C,GAzBMK,cCCHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6d5629da.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id}) =>{\r\n    return(\r\n        <div className='bg-light-green dib pa3 br3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robot' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({robots}) =>{\r\n    return(\r\n        <React.Fragment>\r\n            {\r\n                robots.map((user,i) =>{\r\n                    return (\r\n                        <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input\r\n            className='pa3 ba b--green bg-lightest-blue' \r\n            type='search' \r\n            placeholder='search robots'\r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll', border: '2px solid black', height: '500px'}}>\r\n            {props.children};\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\n//const state ={\r\n    //robots: [],\r\n    //searchfield:''\r\n//}\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(resoponse=> resoponse.json())\r\n            .then(users=> this.setState({robots:users}));\r\n    }\r\n\r\n    onSearchChange = (event) =>{\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ?\r\n            <h1>loading</h1> :\r\n        (\r\n            <div className='tc'>\r\n                <div className='heading'>\r\n                    <h1>robofriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                </div>\r\n                <Scroll>\r\n                    <CardList robots={filteredRobots}/>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}